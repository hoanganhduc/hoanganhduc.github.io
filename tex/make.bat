@echo off
REM Turn off command echoing

set NAME="main"
set ARCHIVE_NAME="main"
set TITLE="Article Template"
set OVERLEAF_DIR="%USERPROFILE%\Dropbox\Apps\Overleaf\%TITLE%"
REM Set variables for the script

:loop
REM Start of the loop to process command-line arguments
IF "%~1"=="" GOTO all
IF "%~1"=="archive" GOTO archive
IF "%~1"=="overleaf" GOTO overleaf
IF "%~1"=="update" GOTO update
IF "%~1"=="remove-comments" GOTO remove-comments
IF "%~1"=="clean" GOTO clean
IF "%~1"=="push-to-overleaf" GOTO push-to-overleaf
IF "%~1"=="push-to-github" GOTO push-to-github
IF "%~1"=="push-to-github-overleaf" GOTO push-to-github-overleaf
IF "%~1"=="merge-overleaf-to-master" GOTO merge-overleaf-to-master
IF "%~1"=="merge-master-to-overleaf" GOTO merge-master-to-overleaf
GOTO loop
REM Check the first command-line argument and jump to the corresponding label

:all
REM Compile the LaTeX document and clean up auxiliary files
latexmk -pdf %NAME%
latexmk -c
GOTO:EOF

:archive
REM Create a zip archive excluding certain files
zip -u -r --exclude="*.zip" --exclude "*.synctex.gz" --exclude "*.bbl" --exclude="%NAME%.pdf" --exclude="%NAME%-*.tex" "%ARCHIVE_NAME%.zip" ./
GOTO:EOF

:overleaf
REM Clean up, create Overleaf directory, and copy files to Overleaf directory
call %~0 clean
mkdir "%OVERLEAF_DIR%"
xcopy /A /D /E /Y /F * "%OVERLEAF_DIR%" /exclude:exclude.txt 
GOTO:EOF

:update
REM Pull the latest changes from the git repository
REM xcopy /A /D /E /Y /F "%OVERLEAF_DIR%\*" .\ /exclude:exclude.txt 
git pull --all
GOTO:EOF

:clean
REM Clean up auxiliary files generated by LaTeX
latexmk -c
del /F *.bbl *.dvi *.log *.bak *.aux *.blg *.idx *.ps *.toc *.out *.snm *.nav *.xml *.bcf *.spl *.synctex.gz *~ *.aux *.blg *.fdb_latexmk *.fls *.log*.synctex* *-blx.bib *SAVE-ERROR
rmdir /s /q tikz-cache
echo "Junk files removed"
GOTO:EOF

:: Require sed for windows @ https://github.com/mbuilov/sed-windows
:remove-comments
REM Remove comments from the main.tex file
xcopy /Y /F main.tex main-backup.tex*
latexpand --empty-comments main.tex --output main-stripped.tex
sed -i "/^\s*%%/d" main-stripped.tex
xcopy /Y /F main-stripped.tex main.tex*
del /F main-stripped.tex
echo "Comments in main.tex removed. See the original file main-backup.tex"
GOTO:EOF

:push-to-overleaf
REM Push changes to the Overleaf branch in the git repository
echo "Push to Overleaf"
git checkout overleaf
git add --all .
git commit -S -m "push changes to Overleaf %date% %time%"
git push -u overleaf overleaf:master
git checkout master
GOTO:EOF

:push-to-github
REM Push changes to the GitHub repository
echo "Push to GitHub"
git checkout master
git add --all .
git commit -S -m "push changes to GitHub %date% %time%"
git push -u origin master
GOTO:EOF

:push-to-github-overleaf
REM Push changes to the GitHub repository's overleaf branch
git checkout overleaf
REM git add --all .
REM git commit -S -m "push changes to GitHub overleaf branch %date% %time%"
git push -u origin overleaf
git checkout master
GOTO:EOF

:merge-overleaf-to-master
REM Merge the overleaf branch into the master branch
git checkout master
git merge --no-commit --no-ff --allow-unrelated-histories overleaf
git commit -S -m "Merge overleaf onto master %date% %time%"
git push -u origin master
GOTO:EOF

:merge-master-to-overleaf
REM Merge the master branch into the overleaf branch and remove specific files
git checkout overleaf && git merge --no-commit --no-ff --allow-unrelated-histories master && git rm -rf Makefile make.bat exclude.txt .devcontainer README* && latexmk -C && git commit -S -m "Merge master onto overleaf %date% %time%" && git push -u overleaf overleaf:master && git push -u origin overleaf && git checkout master
GOTO:EOF

